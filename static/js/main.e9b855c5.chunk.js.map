{"version":3,"sources":["theme/makeStyles.ts","components/GameMap/styles.ts","components/ImageLayer/styles.ts","components/ImageLayer/ImageLayer.tsx","components/ImageLayer/index.ts","components/ObjectLayer/styles.ts","components/ObjectLayer/ObjectLayer.tsx","components/ObjectLayer/index.ts","components/GameMap/GameMap.tsx","components/GameMap/index.ts","App.tsx","serviceWorker.ts","index.tsx","mapDef.yaml"],"names":["makeStyles","styles","options","oriMakeStyles","omit","theme","root","layer","position","top","left","userSelect","name","index","ImageLayer","props","url","classes","useStyles","className","layerId","layerDef","classNames","src","startsWith","process","alt","defaultProps","tileSize","mapDef","width","gridSize","height","tile","backgroundColor","borderStyle","borderColor","borderWidth","walkable","ObjectLayer","_","times","gridCount","y","x","key","style","GameMap","layerOrder","map","type","layerComponentRender","layerDefs","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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":"static/js/main.e9b855c5.chunk.js","sourcesContent":["import omit from 'lodash/omit'\nimport { Theme } from '@material-ui/core/styles/createMuiTheme'\nimport { makeStyles as oriMakeStyles } from '@material-ui/styles'\n\nimport { Styles, WithStylesOptions } from '@material-ui/styles/withStyles'\n\nexport const makeStyles = <\n  Props extends {} = {},\n  ClassKey extends string = string\n>(\n  styles: Styles<Theme, Props, ClassKey>,\n  options?: WithStylesOptions<Theme>,\n) => {\n  return oriMakeStyles(\n    styles,\n    process.env.NODE_ENV === 'production' ? omit(options, 'name') : options,\n  )\n}\nexport default makeStyles\n","import makeStyles from 'theme/makeStyles'\nimport { Theme } from '@material-ui/core/styles'\n\nexport default makeStyles(\n  (theme: Theme) => ({\n    root: {\n      // style code\n    },\n    layer: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      userSelect: 'none',\n    },\n  }),\n  { name: 'GameMap', index: 1 },\n)\n","import makeStyles from 'theme/makeStyles'\nimport { Theme } from '@material-ui/core/styles'\n\nexport default makeStyles(\n  (theme: Theme) => ({\n    root: {},\n  }),\n  { name: 'ImageLayer', index: 1 },\n)\n","import classNames from 'clsx'\nimport * as React from 'react'\nimport useStyles from './styles'\nimport MapType, { ImageLayer as ImageLayerType } from 'maptype'\n\nexport interface ImageLayerProps {\n  classes?: Partial<ReturnType<typeof useStyles>>\n  className?: string\n  layerId: string\n  layerDef: ImageLayerType\n  mapDef: MapType\n}\n\nconst makeUrl = (url: string) => {\n  if (url) {\n    if (url.startsWith('/')) {\n      return process.env.PUBLIC_URL + url\n    }\n  }\n\n  return url\n}\n\nexport const ImageLayer: React.FC<ImageLayerProps> = (props) => {\n  const classes = useStyles(props)\n  const { className, layerId, layerDef } = props\n\n  return (\n    <div className={classNames(className, classes.root)}>\n      <img src={makeUrl(layerDef.src)} alt={layerId} />\n    </div>\n  )\n}\n\nImageLayer.defaultProps = {}\n\nexport default ImageLayer\n","import ImageLayer from './ImageLayer'\n\nexport default ImageLayer\n","import makeStyles from 'theme/makeStyles'\nimport { Theme } from '@material-ui/core/styles'\nimport MapType from 'maptype'\n\nexport default makeStyles(\n  (theme: Theme) => ({\n    root: {\n      // style code\n    },\n    tileSize: (mapDef: MapType) => ({\n      width: mapDef.gridSize.width,\n      height: mapDef.gridSize.height,\n    }),\n    tile: {\n      backgroundColor: 'rgba(255,0,0,0.3)',\n      position: 'absolute',\n      borderStyle: 'solid',\n      borderColor: 'rgba(255,0,0,0.3)',\n      borderWidth: 1,\n    },\n    walkable: {\n      backgroundColor: 'unset',\n      borderColor: 'rgba(0,255,0,0.1)',\n    },\n  }),\n  { name: 'ObjectLayer', index: 1 },\n)\n","import _ from 'lodash'\nimport classNames from 'clsx'\nimport * as React from 'react'\nimport useStyles from './styles'\nimport MapType, { ObjectLayer as ObjectLayerType } from 'maptype'\n\nexport interface ObjectLayerProps {\n  classes?: Partial<ReturnType<typeof useStyles>>\n  className?: string\n  layerId: string\n  layerDef: ObjectLayerType\n  mapDef: MapType\n}\n\nexport const ObjectLayer: React.FC<ObjectLayerProps> = (props) => {\n  const { className, mapDef, layerDef } = props\n  const classes = useStyles(mapDef)\n\n  return (\n    <div className={classNames(className, classes.root)}>\n      {_.times(mapDef.gridCount.height, (y) => {\n        return _.times(mapDef.gridCount.width, (x) => {\n          return (\n            <div\n              key={y + ':' + x}\n              style={{\n                top: y * mapDef.gridSize.height,\n                left: x * mapDef.gridSize.width,\n              }}\n              className={classNames(classes.tile, classes.tileSize, {\n                [classes.walkable]: layerDef.walkable?.[y]?.[x],\n              })}\n            />\n          )\n        })\n      })}\n    </div>\n  )\n}\n\nObjectLayer.defaultProps = {}\n\nexport default ObjectLayer\n","import ObjectLayer from './ObjectLayer'\n\nexport default ObjectLayer\n","import classNames from 'clsx'\nimport * as React from 'react'\nimport useStyles from './styles'\nimport MapType, { AllLayer } from 'maptype'\nimport ImageLayer from 'components/ImageLayer'\nimport ObjectLayer from 'components/ObjectLayer'\n\nexport interface GameMapProps {\n  classes?: Partial<ReturnType<typeof useStyles>>\n  className?: string\n  mapDef: MapType\n}\n\nexport const GameMap: React.FC<GameMapProps> = (props) => {\n  const classes = useStyles(props)\n  const { className, mapDef } = props\n\n  const layerComponentRender = (layerId: string, layerDef: AllLayer) => {\n    switch (layerDef.type) {\n      case 'image':\n        return (\n          <ImageLayer\n            className={classes.layer}\n            key={layerId}\n            layerId={layerId}\n            layerDef={layerDef}\n            mapDef={mapDef}\n          />\n        )\n      case 'object':\n        return (\n          <ObjectLayer\n            className={classes.layer}\n            key={layerId}\n            layerId={layerId}\n            layerDef={layerDef}\n            mapDef={mapDef}\n          />\n        )\n      default:\n        return null\n    }\n  }\n\n  return (\n    <div className={classNames(className, classes.root)}>\n      {mapDef.layerOrder.map((layerId) => {\n        return layerComponentRender(layerId, mapDef.layerDefs[layerId])\n      })}\n    </div>\n  )\n}\n\nGameMap.defaultProps = {}\n\nexport default GameMap\n","import GameMap from './GameMap'\n\nexport default GameMap\n","import React from 'react'\nimport mapDef from './mapDef.yaml'\nimport GameMap from 'components/GameMap'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GameMap mapDef={mapDef} />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\"gridCount\":{\"width\":36,\"height\":24},\"gridSize\":{\"width\":70,\"height\":70},\"layerOrder\":[\"imagelayer1\",\"objectlayer1\"],\"layerDefs\":{\"imagelayer1\":{\"type\":\"image\",\"src\":\"/assets/map.png\"},\"objectlayer1\":{\"type\":\"object\",\"walkable\":[[1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1],[1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1],[0,0,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1],[1,0,0,0,0,1,1,0,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,1,1,1],[1,0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1],[1,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,0,0,0,0,0,0,1,1,0,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,0,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]}}}"],"sourceRoot":""}